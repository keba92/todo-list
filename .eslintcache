[{"D:\\Itransition\\task6\\client\\src\\index.js":"1","D:\\Itransition\\task6\\client\\src\\reportWebVitals.js":"2","D:\\Itransition\\task6\\client\\src\\App.js":"3","D:\\Itransition\\task6\\client\\src\\Box.jsx":"4","D:\\Itransition\\task6\\client\\src\\Firebase.js":"5"},{"size":287,"mtime":1608294322164,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":4452,"mtime":1608464887618,"results":"9","hashOfConfig":"7"},{"size":194,"mtime":1608305897716,"results":"10","hashOfConfig":"7"},{"size":541,"mtime":1608363584532,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1tcay2g",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\Itransition\\task6\\client\\src\\index.js",[],["25","26"],"D:\\Itransition\\task6\\client\\src\\reportWebVitals.js",[],"D:\\Itransition\\task6\\client\\src\\App.js",["27","28","29"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport ReactGridLayout  from 'react-grid-layout';\nimport Box from './Box';\nimport firebase from './Firebase';\nimport 'firebase/firestore';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport {  MarkdownPreview  } from 'react-marked-markdown';\n\nfunction useLists() {\n  const [lists, setLists] = useState([]);\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"notes\")\n      .onSnapshot(snapshot => {\n        const lists = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n\n        setLists(lists);\n      });\n  }, []);\n\n  return lists;\n}\n\n\nfunction App () {\n\n    const lists = useLists();\n    const [body, setBody] = useState('');\n    const [text, setText] = useState('');\n    const staticX = 0;\n    const data = { i: '', x: staticX, y: 0, w: 1, h: 2, maxW: 2 };\n\n    const add = (e) => {\n      firebase\n      .firestore()\n      .collection(\"notes\")\n      .add({\n        data,\n        body\n      });\n      setBody(\"\");\n    };\n\n    const layout = lists.map((el,index) => {\n      el.data.i = `${index + 1}`;\n      return el.data;\n    })\n\n    const deleteItem = (e) => {\n      e.preventDefault()\n      const id = e.target.name;\n      e.stopPropagation();\n      firebase\n        .firestore()\n        .collection(\"notes\")\n        .doc(id)\n        .delete();\n    };\n\n    const saveText = (e) =>{\n      if (text.text != ''){\n        const newBody = text.text;\n        let newData;\n        lists.forEach((el) => {\n          if(el.id == text.id){\n            newData = el.data;\n          }\n        })\n\n        if(newBody&&newData){\n          firebase\n          .firestore()\n          .collection(\"notes\")\n          .doc(text.id)\n          .update({\n            'body': newBody,\n            'data': newData\n          })\n          setText('');\n        }\n      }\n    }\n\n    const upItemBox = (e) =>{\n      e.stopPropagation();\n      lists.forEach((el)=>{\n        if (el.id == e.target.id){\n          el.data.y = 0;\n        } else {\n          el.data.y += 1;\n        }\n        firebase\n        .firestore()\n        .collection(\"notes\")\n        .doc(el.id)\n        .update({\n        'data': el.data\n        })\n      })\n    }\n\n    const typeText = (e)=>{\n      e.stopPropagation();\n      setText({id: e.target.title, text: e.target.value});\n    }\n\n    const changeColor = (e) =>{\n      e.stopPropagation();\n      e.preventDefault();\n      document.querySelector(`#${e.target.name}`).style.backgroundColor = e.target.className;\n    }\n\n    const stopProp = (e) =>{\n      e.stopPropagation();\n    }\n\n    return (\n    <div className ='container' onClick ={add}>\n      <div className ='todos' onClick={stopProp}>\n      <ReactGridLayout  \n        className=\"layout\" \n        layout={layout}\n        rowHeight={80}\n        cols={1}\n        width={800}\n        margin={[1,10]}\n        >\n          {\n            lists.map((el,index) => {\n              return(\n                <Box key={`${index+1}`} id={`${el.id}`} className ='blockShow' onClick = {upItemBox}>\n                  <div className=\"changeColor show\">\n                    <span>\n                      <button className=\"blue\" onClick={changeColor} name={`${el.id}`}></button>\n                      <button className=\"pink\" onClick={changeColor} name={`${el.id}`}></button>\n                      <button className=\"yellow\" onClick={changeColor} name={`${el.id}`}></button>\n                    </span>\n                  </div>\n                  <div className='close show'>\n                  <button className = 'btn' name={`${el.id}`} onClick ={deleteItem}>X</button>\n                  </div>\n                  <div className='bodyItem' title={el.id}>\n                    <div className='inputBlock show'>\n                      <textarea rows=\"5\" cols=\"15\" name=\"text\" className='inputText' title={`${el.id}`} onChange={typeText}>{el.body}</textarea>\n                      <button name={`${el.id}`} onClick= {saveText}><FontAwesomeIcon icon={faCheck} /></button>\n                    </div>\n                    <div className={`textBlock  ${el.id}`}>\n                      <MarkdownPreview value ={el.body} />\n                    </div>\n                  </div>\n                </Box>\n              )\n            })\n          }\n      </ReactGridLayout >\n      </div>\n    </div>\n    );\n}\nexport default App;\n","D:\\Itransition\\task6\\client\\src\\Box.jsx",[],["30","31"],"D:\\Itransition\\task6\\client\\src\\Firebase.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":68,"column":21,"nodeType":"38","messageId":"39","endLine":68,"endColumn":23},{"ruleId":"36","severity":1,"message":"40","line":72,"column":20,"nodeType":"38","messageId":"39","endLine":72,"endColumn":22},{"ruleId":"36","severity":1,"message":"40","line":94,"column":19,"nodeType":"38","messageId":"39","endLine":94,"endColumn":21},{"ruleId":"32","replacedBy":"41"},{"ruleId":"34","replacedBy":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["43"],["44"],"no-global-assign","no-unsafe-negation"]